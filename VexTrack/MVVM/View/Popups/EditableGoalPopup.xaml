<UserControl x:Class="VexTrack.MVVM.View.Popups.EditableGoalPopup"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:validation="clr-namespace:VexTrack.MVVM.Validation"
			 xmlns:model="clr-namespace:VexTrack.MVVM.Model"
			 xmlns:popups="clr-namespace:VexTrack.MVVM.ViewModel.Popups"
             xmlns:util="clr-namespace:VexTrack.Core.Util"
			 mc:Ignorable="d" 
             d:DesignHeight="812" d:DesignWidth="872">

	<UserControl.DataContext>
		<popups:EditableGoalPopupViewModel/>
	</UserControl.DataContext>

	<Grid Height="Auto"
	      Width="640"
	      VerticalAlignment="Center">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<Border Background="{Binding Source={x:Static util:SettingsHelper.Data}, Path=Theme.BackgroundBrush}"
				CornerRadius="8">
			<Grid Margin="16">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				
				<Grid Grid.Row="0"
					  Grid.Column="0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="30"/>
						<RowDefinition Height="30"/>
						<RowDefinition Height="30"/>
						<RowDefinition Height="30"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<TextBlock Text="{Binding PopupTitle}"
							   Grid.ColumnSpan="2"
							   FontSize="20"
							   FontWeight="Bold"
							   Margin="0, 0, 0, 16"
							   Foreground="{Binding Source={x:Static util:SettingsHelper.Data}, Path=Theme.ForegroundBrush}"/>
					
					<TextBlock Text="Name"
							   Grid.Row="1"
							   Grid.Column="0"
							   FontSize="14"
							   FontWeight="Bold"
							   Foreground="{Binding Source={x:Static util:SettingsHelper.Data}, Path=Theme.ForegroundBrush}"
							   Margin="0, 0, 0, 8"/>

					<TextBlock Text="Collected XP"
							   Grid.Row="2"
							   Grid.Column="0"
							   FontSize="14"
							   FontWeight="Bold"
							   Foreground="{Binding Source={x:Static util:SettingsHelper.Data}, Path=Theme.ForegroundBrush}"
							   Margin="0, 0, 0, 8"/>

					<TextBlock Text="Total XP"
							   Grid.Row="3"
							   Grid.Column="0"
							   FontSize="14"
							   FontWeight="Bold"
							   Foreground="{Binding Source={x:Static util:SettingsHelper.Data}, Path=Theme.ForegroundBrush}"
							   Margin="0, 0, 0, 8"/>

					<TextBlock Text="Color"
							   Grid.Row="4"
							   Grid.Column="0"
							   FontSize="14"
							   FontWeight="Bold"
							   Foreground="{Binding Source={x:Static util:SettingsHelper.Data}, Path=Theme.ForegroundBrush}"
							   Margin="0, 0, 0, 8"/>



					<TextBox Text="{Binding Name}"
							   Grid.Row="1"
							   Grid.Column="1"
							   FontSize="14"
							   Margin="0, 0, 0, 8"
							 Height="22"
							 Style="{DynamicResource TextBoxTheme}"/>



					<TextBox Grid.Row="2"
							 Grid.Column="1"
							 FontSize="14"
							 Margin="0, 0, 0, 8"
							 Height="22"
							 Style="{DynamicResource TextBoxTheme}">
						<TextBox.Text>
							<Binding Path="Collected"
									 UpdateSourceTrigger="PropertyChanged"
									 ValidatesOnNotifyDataErrors="True"
									 ValidatesOnDataErrors="True"
									 NotifyOnValidationError="True">
								<Binding.ValidationRules>
									<validation:NumericValidationRule ValidatesOnTargetUpdated="True"/>
								</Binding.ValidationRules>
							</Binding>
						</TextBox.Text>
					</TextBox>

					<TextBox Grid.Row="3"
							 Grid.Column="1"
							 FontSize="14"
							 Margin="0, 0, 0, 8"
							 Height="22"
							 Style="{DynamicResource TextBoxTheme}">
						<TextBox.Text>
							<Binding Path="Total"
									 UpdateSourceTrigger="PropertyChanged"
									 ValidatesOnNotifyDataErrors="True"
									 ValidatesOnDataErrors="True"
									 NotifyOnValidationError="True">
								<Binding.ValidationRules>
									<validation:NumericValidationRule ValidatesOnTargetUpdated="True"/>
								</Binding.ValidationRules>
							</Binding>
						</TextBox.Text>
					</TextBox>

					<Grid Grid.Row="4"
						  Grid.Column="1">

						<TextBlock Text="Use Accent Color"
								   Foreground="{Binding Source={x:Static util:SettingsHelper.Data}, Path=Theme.ForegroundBrush}"
								   FontSize="14"
								   HorizontalAlignment="Left"
								   VerticalAlignment="Center"
								   Margin="8, 0, 0, 0"
								   FontWeight="Bold"/>

						<CheckBox Width="50" Height="30"
						          HorizontalAlignment="Right"
								  IsChecked="{Binding UseAccentColor}"
								  Style="{StaticResource CheckBoxTheme}"/>
					</Grid>
					
					<model:ColorPickerModel Grid.Row="5"
											Grid.Column="0"
											Grid.ColumnSpan="2"
											Margin="0, 8, 0, 0"
											Visibility="{Binding UseAccentColor, Converter={StaticResource InvertedBooleanToVisibilityConverter}, ConverterParameter=true}"
											Hex="{Binding Color, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
					
					<model:SegmentedProgressModel Margin="0, 8, 0, 0"
					                              Grid.Column="0" Grid.Row="6"
					                              Grid.ColumnSpan="2"
					                              VerticalAlignment="Center"
					                              Value="{Binding Progress}"
					                              Color="{Binding Color, UpdateSourceTrigger=PropertyChanged}"/>
				</Grid>

				<Grid Grid.Column="0" Grid.Row="1"
				      Grid.ColumnSpan="2"
				      Margin="0, 16, 0, 0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>

					<Button Content="Cancel"
							Width="80"
							Height="30"
							HorizontalAlignment="Left"
							VerticalAlignment="Bottom"
							Style="{DynamicResource ButtonTheme}"
							Command="{Binding OnBackClicked}"/>

					<Button Content="Done"
							Grid.Column="1"
							Width="80"
							Height="30"
							HorizontalAlignment="Right"
							VerticalAlignment="Bottom"
							Style="{DynamicResource ButtonTheme}"
							Command="{Binding OnDoneClicked}" />
				</Grid>
			</Grid>
		</Border>
	</Grid>
</UserControl>
