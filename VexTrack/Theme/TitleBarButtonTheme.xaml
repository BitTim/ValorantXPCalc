<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Style x:Key="TitleBarButtonStyle" TargetType="Button">
		<Setter Property="Foreground" Value="{DynamicResource Foreground}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border Background="{DynamicResource Foreground}"
										Opacity="0"
										CornerRadius="8"
								SnapsToDevicePixels="true">
							<Border.Triggers>
								<EventTrigger RoutedEvent="UIElement.MouseEnter">
									<BeginStoryboard>
										<Storyboard Storyboard.TargetProperty="Opacity">
											<DoubleAnimation From="0" To="0.2" Duration="00:00:00.10"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>

								<EventTrigger RoutedEvent="UIElement.MouseLeave">
									<BeginStoryboard>
										<Storyboard Storyboard.TargetProperty="Opacity">
											<DoubleAnimation From="0.2" To="0" Duration="00:00:00.10"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Border.Triggers>
						</Border>

						<Border IsHitTestVisible="False"
						x:Name="border"
						BorderThickness="0"
						CornerRadius="8"
						SnapsToDevicePixels="true">
							<ContentPresenter
							x:Name="contentPresenter"
							Margin="0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Focusable="False"
							RecognizesAccessKey="True" />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
		<Setter Property="Foreground" Value="{DynamicResource Foreground}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border Background="{DynamicResource AccRed}"
										Opacity="0"
										CornerRadius="8"
								SnapsToDevicePixels="true">
							<Border.Triggers>
								<EventTrigger RoutedEvent="UIElement.MouseEnter">
									<BeginStoryboard>
										<Storyboard Storyboard.TargetProperty="Opacity">
											<DoubleAnimation From="0" To="0.75" Duration="00:00:00.10"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>

								<EventTrigger RoutedEvent="UIElement.MouseLeave">
									<BeginStoryboard>
										<Storyboard Storyboard.TargetProperty="Opacity">
											<DoubleAnimation From="0.75" To="0" Duration="00:00:00.10"/>
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Border.Triggers>
						</Border>

						<Border IsHitTestVisible="False"
						x:Name="border"
						BorderThickness="0"
						CornerRadius="8"
						SnapsToDevicePixels="true">
							<ContentPresenter
							x:Name="contentPresenter"
							Margin="0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Focusable="False"
							RecognizesAccessKey="True" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="white" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>